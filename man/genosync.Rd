% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genosync.R
\name{genosync}
\alias{genosync}
\title{\code{genosync}}
\usage{
genosync(seu_obj, hash_csv, soup_runs)
}
\arguments{
\item{seu_obj}{The input Seurat object. Must contain hash assay named \code{HTO} or \code{hto} in dgCMatrix format.
Must contain Souporcell genotype assays named \code{GENO} or \code{geno} with the desired k value (ex: \code{GENO5}).
Assumes Souporcell was run renaming all multiplet designations to 'multiplet' (see \code{\link[viewmastR:add_souporcell_seurat]{viewmastR::add_souporcell_seurat()}}).}

\item{hash_csv}{The input hash-sample csv file path. The csv must contain \code{Hash} and \code{Sample} columns.}

\item{soup_runs}{A numeric vector of Souporcell runs to iterate through, indicating the number of genotypes detected.}
}
\value{
If there are consensus matches, the kmeans and logistic results for those Souporcell runs will be returned as a list.
If there are no matches, all kmeans and logistic results will be output for all Souporcell runs as a list.
}
\description{
\code{genosync} To demultiplex pooled samples, this wrapper function runs two independent methods on hash data from
an input Seurat object. The first method combines kmeans and apriori association analysis, \code{\link[=kmeansync]{kmeansync()}}.
The second method runs binary logistic regression, \code{\link[=logisync]{logisync()}}. Compares both methods for all Souporcell runs,
and outputs matching results. If there are no matches, all results will be output.
}
\examples{
\dontrun{

 output_list <- genosync(seu_ABCD, hash_csv='/path/to/hash_sampleABCD.csv', soup_runs=c(3:8))
  
}

}
